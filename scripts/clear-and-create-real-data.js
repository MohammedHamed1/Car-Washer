const mongoose = require('mongoose');
const { MONGODB_CONFIG } = require('./database-config');

async function clearAndCreateRealData() {
  try {
    console.log('üöÄ Clearing all test data and creating real data...');
    
    await mongoose.connect(MONGODB_CONFIG.uri, MONGODB_CONFIG.options);
    console.log('‚úÖ Connected to MongoDB');
    
    const db = mongoose.connection;
    
    // Clear all collections
    console.log('üßπ Clearing all test data...');
    const collections = ['packages', 'washingplaces', 'washes', 'payments', 'feedbacks', 'cars', 'notifications', 'referrals', 'userpackages'];
    
    for (const collectionName of collections) {
      try {
        const collection = db.db.collection(collectionName);
        const result = await collection.deleteMany({});
        console.log(`‚úÖ Cleared ${result.deletedCount} documents from ${collectionName}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è  Could not clear ${collectionName}: ${error.message}`);
      }
    }
    
    console.log('‚úÖ All test data cleared!');
    
    // Create Real Washing Places in Riyadh
    console.log('\nüè¢ Creating real washing places in Riyadh...');
    const washingPlacesCollection = db.db.collection('washingplaces');
    
    const washingPlaces = [
      {
        name: 'ŸÖÿ∫ÿ≥ŸÑÿ© ÿßŸÑÿ±Ÿäÿßÿ∂ ÿßŸÑÿ£ŸàŸÑŸâ',
        address: 'ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ¥ÿßÿ±ÿπ ÿßŸÑŸÖŸÑŸÉ ŸÅŸáÿØÿå ÿ≠Ÿä ÿßŸÑŸÜÿ≤Ÿáÿ©',
        phone: '+966501234567',
        hours: '24/7',
        email: 'branch1@paypass.com',
        location: 'Point',
        city: 'ÿßŸÑÿ±Ÿäÿßÿ∂',
        rating: 4.5,
        customers: 150,
        status: 'active',
        activeOrders: 8,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ŸÖÿ∫ÿ≥ŸÑÿ© ÿßŸÑÿ±Ÿäÿßÿ∂ ÿßŸÑÿ´ÿßŸÜŸäÿ©',
        address: 'ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ¥ÿßÿ±ÿπ ÿßŸÑÿ™ÿ≠ŸÑŸäÿ©ÿå ÿ≠Ÿä ÿßŸÑÿ≥ŸÑŸäŸÖÿßŸÜŸäÿ©',
        phone: '+966501234568',
        hours: '24/7',
        email: 'branch2@paypass.com',
        location: 'Point',
        city: 'ÿßŸÑÿ±Ÿäÿßÿ∂',
        rating: 4.3,
        customers: 120,
        status: 'active',
        activeOrders: 6,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ŸÖÿ∫ÿ≥ŸÑÿ© ÿßŸÑÿ±Ÿäÿßÿ∂ ÿßŸÑÿ´ÿßŸÑÿ´ÿ©',
        address: 'ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ¥ÿßÿ±ÿπ ÿßŸÑÿπŸÑŸäÿßÿå ÿ≠Ÿä ÿßŸÑÿπŸÑŸäÿß',
        phone: '+966501234569',
        hours: '24/7',
        email: 'branch3@paypass.com',
        location: 'Point',
        city: 'ÿßŸÑÿ±Ÿäÿßÿ∂',
        rating: 4.7,
        customers: 180,
        status: 'active',
        activeOrders: 12,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ŸÖÿ∫ÿ≥ŸÑÿ© ÿßŸÑÿ±Ÿäÿßÿ∂ ÿßŸÑÿ±ÿßÿ®ÿπÿ©',
        address: 'ÿßŸÑÿ±Ÿäÿßÿ∂ÿå ÿ¥ÿßÿ±ÿπ ÿßŸÑŸÖŸÑŸÉ ÿπÿ®ÿØÿßŸÑŸÑŸáÿå ÿ≠Ÿä ÿßŸÑŸÖŸÑŸÇÿß',
        phone: '+966501234570',
        hours: '24/7',
        email: 'branch4@paypass.com',
        location: 'Point',
        city: 'ÿßŸÑÿ±Ÿäÿßÿ∂',
        rating: 4.4,
        customers: 140,
        status: 'active',
        activeOrders: 9,
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];
    
    await washingPlacesCollection.insertMany(washingPlaces);
    console.log('‚úÖ Real washing places created!');
    
    // Create Real Packages
    console.log('\nüì¶ Creating real packages...');
    const packagesCollection = db.db.collection('packages');
    
    const packages = [
      {
        name: 'ÿßŸÑÿ®ÿßŸÇÿ© ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©',
        description: 'ÿßŸÑÿÆŸäÿßÿ± ÿßŸÑŸÖÿ´ÿßŸÑŸä ŸÑŸÖŸÜ Ÿäÿ®ÿ≠ÿ´ ÿπŸÜ ŸÜÿ∏ÿßŸÅÿ© ÿ£ÿ≥ÿßÿ≥Ÿäÿ© ŸÖÿπ ÿ™ŸàŸÅŸäÿ± ÿ•ÿ∂ÿßŸÅŸä!',
        price: 150,
        duration: 30,
        status: 'active',
        basePrice: 150,
        originalPrice: 235,
        features: [
          '4 ÿ∫ÿ≥ŸÑÿßÿ™ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿµÿßÿ®ŸàŸÜ ÿ•Ÿäÿ∑ÿßŸÑŸä ŸÅÿßÿÆÿ± ÿπÿßŸÑŸä ÿßŸÑÿ¨ŸàÿØÿ©',
          'ÿ∫ÿ≥ŸäŸÑ ÿ®ÿ∑ÿ®ŸÇÿ™ŸäŸÜ ŸÖŸÜ ÿßŸÑÿµÿßÿ®ŸàŸÜ ŸÑÿ∂ŸÖÿßŸÜ ŸÜÿ∏ÿßŸÅÿ© ÿπŸÖŸäŸÇÿ© ŸàŸÑŸÖÿπÿßŸÜ ŸäÿØŸàŸÖ',
          'ÿ∫ÿ≥ŸÑÿ© ÿ•ÿ∂ÿßŸÅŸäÿ© ŸÖÿ¨ÿßŸÜŸäÿ©ÿå ŸÑŸäÿµÿ®ÿ≠ ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ∫ÿ≥ŸÑÿßÿ™: 5',
          'ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ™ŸàŸÅŸäÿ±: 85 ÿ±ŸäÿßŸÑ ÿ≥ÿπŸàÿØŸä',
          'ÿµÿßŸÑÿ≠ÿ© ŸÑŸÖÿØÿ© ÿ¥Ÿáÿ± Ÿàÿßÿ≠ÿØ ŸÖŸÜ ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑÿ¥ÿ±ÿßÿ°'
        ],
        popular: false,
        washes: 5,
        savings: 85,
        size: 'small',
        isVIP: false,
        pricing: {
          small: 150,
          medium: 200,
          large: 250
        },
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ÿßŸÑÿ®ÿßŸÇÿ© ÿßŸÑŸÖÿ™ŸÇÿØŸÖÿ©',
        description: 'ÿßŸÑÿÆŸäÿßÿ± ÿßŸÑÿπŸÖŸÑŸä ŸÑŸÑŸÜÿ∏ÿßŸÅÿ© ÿßŸÑŸÖÿ´ÿßŸÑŸäÿ© ÿ®ÿ≥ÿπÿ± ÿ™ŸÜÿßŸÅÿ≥Ÿä.',
        price: 280,
        duration: 30,
        status: 'active',
        basePrice: 280,
        originalPrice: 420,
        features: [
          '8 ÿ∫ÿ≥ŸÑÿßÿ™ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿµÿßÿ®ŸàŸÜ ÿ•Ÿäÿ∑ÿßŸÑŸä ŸÅÿßÿÆÿ± ŸäŸÖŸÜÿ≠ ÿ≥Ÿäÿßÿ±ÿ™ŸÉ ÿßŸÑÿπŸÜÿßŸäÿ© ÿßŸÑÿ™Ÿä ÿ™ÿ≥ÿ™ÿ≠ŸÇŸáÿß',
          'ÿ∫ÿ≥ŸäŸÑ ÿ®ÿ∑ÿ®ŸÇÿ™ŸäŸÜ ŸÖŸÜ ÿßŸÑÿµÿßÿ®ŸàŸÜ ŸÑÿ∂ŸÖÿßŸÜ ŸÜÿ∏ÿßŸÅÿ© ÿπŸÖŸäŸÇÿ© ŸàŸÑŸÖÿπÿßŸÜ ŸäÿØŸàŸÖ',
          'ÿ∫ÿ≥ŸÑÿ™ÿßŸÜ ŸÖÿ¨ÿßŸÜŸäÿ™ÿßŸÜÿå ŸÑŸäÿµÿ®ÿ≠ ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ∫ÿ≥ŸÑÿßÿ™: 10',
          'ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ™ŸàŸÅŸäÿ±: 140 ÿ±ŸäÿßŸÑ ÿ≥ÿπŸàÿØŸä',
          'ÿµÿßŸÑÿ≠ÿ© ŸÑŸÖÿØÿ© ÿ¥Ÿáÿ± Ÿàÿßÿ≠ÿØ ŸÖŸÜ ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑÿ¥ÿ±ÿßÿ°'
        ],
        popular: true,
        washes: 10,
        savings: 140,
        size: 'medium',
        isVIP: false,
        pricing: {
          small: 280,
          medium: 350,
          large: 420
        },
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ÿßŸÑÿ®ÿßŸÇÿ© ÿßŸÑÿ¥ÿßŸÖŸÑÿ©',
        description: 'ÿßŸÑÿÆŸäÿßÿ± ÿßŸÑÿ£ŸÖÿ´ŸÑ ŸÑŸÖŸÜ Ÿäÿ±ŸäÿØ ÿßŸÑÿπŸÜÿßŸäÿ© ÿßŸÑŸÇÿµŸàŸâ ÿ®ÿ≥Ÿäÿßÿ±ÿßÿ™Ÿá ŸÖÿπ ÿ£ŸÉÿ®ÿ± ŸÇÿØÿ± ŸÖŸÜ ÿßŸÑÿ™ŸàŸÅŸäÿ±.',
        price: 490,
        duration: 30,
        status: 'active',
        basePrice: 490,
        originalPrice: 770,
        features: [
          '14 ÿ∫ÿ≥ŸÑÿ© ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿµÿßÿ®ŸàŸÜ ÿ•Ÿäÿ∑ÿßŸÑŸä ŸÅÿßÿÆÿ± ŸäŸàŸÅÿ± ÿπŸÜÿßŸäÿ© ŸÅÿßÿ¶ŸÇÿ© ÿ®ÿ≥Ÿäÿßÿ±ÿ™ŸÉ',
          'ÿ∫ÿ≥ŸäŸÑ ÿ®ÿ∑ÿ®ŸÇÿ™ŸäŸÜ ŸÖŸÜ ÿßŸÑÿµÿßÿ®ŸàŸÜ ŸÑÿ∂ŸÖÿßŸÜ ÿ•ÿ≤ÿßŸÑÿ© ÿßŸÑÿ£Ÿàÿ≥ÿßÿÆ ÿ®ŸÅÿπÿßŸÑŸäÿ© Ÿàÿ≠ŸÖÿßŸäÿ© ÿ∑ŸàŸäŸÑÿ© ÿßŸÑÿ£ŸÖÿØ',
          '4 ÿ∫ÿ≥ŸÑÿßÿ™ ŸÖÿ¨ÿßŸÜŸäÿ©ÿå ŸÑŸäÿµÿ®ÿ≠ ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ∫ÿ≥ŸÑÿßÿ™: 18',
          'ÿ•ÿ¨ŸÖÿßŸÑŸä ÿßŸÑÿ™ŸàŸÅŸäÿ±: 280 ÿ±ŸäÿßŸÑ ÿ≥ÿπŸàÿØŸä',
          'ÿµÿßŸÑÿ≠ÿ© ŸÑŸÖÿØÿ© ÿ¥Ÿáÿ± Ÿàÿßÿ≠ÿØ ŸÖŸÜ ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑÿ¥ÿ±ÿßÿ°'
        ],
        popular: false,
        washes: 18,
        savings: 280,
        size: 'large',
        isVIP: false,
        pricing: {
          small: 490,
          medium: 600,
          large: 770
        },
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        name: 'ÿ®ÿßŸÇÿ© VIP',
        description: 'ÿÆÿØŸÖÿ© VIP ŸÖÿ™ŸÖŸäÿ≤ÿ© ŸÅŸä ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÖÿ≠ÿØÿØÿ© ŸÅŸÇÿ∑',
        price: 150,
        duration: 60,
        status: 'active',
        basePrice: 150,
        originalPrice: 235,
        features: [
          'ÿ∫ÿ≥ŸäŸÑ ÿ¥ÿßŸÖŸÑ',
          'ÿ™ÿ¥ŸÖŸÑ ÿßŸÑŸÖŸàŸÇŸÅ ŸàÿßŸÑŸÅÿßŸÑŸäÿ©',
          'ÿÆÿØŸÖÿ© VIP ŸÖÿ™ŸÖŸäÿ≤ÿ©',
          'ÿµÿßŸÑÿ≠ ŸÅŸä ÿßŸÑŸÅŸÜÿßÿØŸÇ ÿßŸÑŸÖÿ≠ÿØÿØÿ© ŸÅŸÇÿ∑',
          'ÿÆÿØŸÖÿ© ŸÖÿ™ŸÖŸäÿ≤ÿ©',
          'ÿ∂ŸÖÿßŸÜ ÿßŸÑÿ¨ŸàÿØÿ©',
          'ÿ™ŸàŸÅŸäÿ± 85 ÿ±ŸäÿßŸÑ'
        ],
        popular: false,
        washes: 1,
        savings: 85,
        size: 'small',
        isVIP: true,
        pricing: {
          small: 150,   // ÿ´ÿßÿ®ÿ™ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ≠ÿ¨ÿßŸÖ
          medium: 150,  // ÿ´ÿßÿ®ÿ™ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ≠ÿ¨ÿßŸÖ
          large: 150    // ÿ´ÿßÿ®ÿ™ ŸÑÿ¨ŸÖŸäÿπ ÿßŸÑÿ£ÿ≠ÿ¨ÿßŸÖ
        },
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];
    
    await packagesCollection.insertMany(packages);
    console.log('‚úÖ Real packages created!');
    
    console.log('\nüéâ REAL DATA CREATED SUCCESSFULLY!');
    console.log('üìä Summary:');
    console.log('   - 4 Washing Places in Riyadh');
    console.log('   - 4 Real Packages (ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©ÿå ÿßŸÑŸÖÿ™ŸÇÿØŸÖÿ©ÿå ÿßŸÑÿ¥ÿßŸÖŸÑÿ©ÿå VIP)');
    console.log('');
    console.log('üì¶ PACKAGES:');
    console.log('='.repeat(50));
    
    packages.forEach((pkg, index) => {
      console.log(`${index + 1}. ${pkg.name}`);
      console.log(`   Description: ${pkg.description}`);
      console.log(`   Base Price: ${pkg.basePrice} SAR`);
      console.log(`   Original Price: ${pkg.originalPrice} SAR`);
      console.log(`   Savings: ${pkg.savings} SAR`);
      console.log(`   Duration: ${pkg.duration} days`);
      console.log(`   Washes: ${pkg.washes}`);
      console.log(`   Popular: ${pkg.popular ? 'Yes' : 'No'}`);
      console.log(`   VIP Package: ${pkg.isVIP ? 'Yes' : 'No'}`);
      console.log(`   Features: ${pkg.features.join(', ')}`);
      console.log(`   Pricing by Car Size:`);
      console.log(`     - Small Cars: ${pkg.pricing.small} SAR`);
      console.log(`     - Medium Cars: ${pkg.pricing.medium} SAR`);
      console.log(`     - Large Cars: ${pkg.pricing.large} SAR`);
      console.log('');
    });
    
    console.log('üè¢ WASHING PLACES:');
    console.log('='.repeat(50));
    
    washingPlaces.forEach((branch, index) => {
      console.log(`${index + 1}. ${branch.name}`);
      console.log(`   Address: ${branch.address}`);
      console.log(`   Phone: ${branch.phone}`);
      console.log(`   Rating: ${branch.rating}/5`);
      console.log(`   Active Orders: ${branch.activeOrders}`);
      console.log('');
    });
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await mongoose.disconnect();
    console.log('üõë Disconnected from MongoDB');
  }
}

clearAndCreateRealData(); 